 const func=(a, m, n, dp)=>{
    if(m==0 && n==0) return 1;
    if(m<0 || n<0) return 0
    if(a[m][n]=== 1) return 0;
    if(dp[m][n]!==-1) return dp[m][n] 
    let l = func(a, m-1, n, dp)
    let r = func(a, m, n-1, dp)
    return dp[m][n]=l+r;

 }
var uniquePathsWithObstacles = function(obstacleGrid) {
    if(obstacleGrid[0][0]===1) return 0
    if(obstacleGrid.length===1 && obstacleGrid[0].length ===1 && obstacleGrid[0][0]===1) return 0
       if(obstacleGrid.length===1 && obstacleGrid[0].length ===1 && obstacleGrid[0][0]===0) return 1
   let m =obstacleGrid.length
   let n = obstacleGrid[0].length
    let dp = new Array(m);
    for(let i =0; i<m; i++){
       dp[i] = new Array(n).fill(-1)
    }
   return func(obstacleGrid, m-1, n-1, dp)
};
