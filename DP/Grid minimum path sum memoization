const func =(a, m, n, dp)=>{
    if(m<0 || n<0) return Number. MAX_VALUE;
    if(m===0 && n===0) return a[m][n];
    if(dp[m][n]!==-1) return dp[m][n];
    let l = func(a, m-1, n, dp);
    let r = func(a, m, n-1, dp); 
    return dp[m][n]=a[m][n]+ Math.min(l, r);
}


var minPathSum = function(grid) {
    let m = grid.length 
    let n = grid[0].length
      let dp = new Array(m);
    for(let i =0; i<m; i++){
       dp[i] = new Array(n).fill(-1)
    }
    return func(grid, m-1, n-1, dp)
};
